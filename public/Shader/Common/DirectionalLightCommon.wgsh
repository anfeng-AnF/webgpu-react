// 平行光
struct DirectionalLightInfo {
    lightDirection: vec4<f32>,      // 16 bytes, offset 0
    lightColor: vec4<f32>,          // 16 bytes, offset 16
    lightIntensity: f32,            // 4 bytes,  offset 32
    bShowCascade: f32,             // 4 bytes,  offset 36
    numCascades: f32,               // 4 bytes,  offset 40
    padding0: f32,                  // 4 bytes,  offset 44
    padding1: vec4<f32>,           // 16 bytes, offset 48-63
};

struct DirectionalLightCascadeInfo {
    viewMatrix: mat4x4<f32>,        // 64 bytes
    projectionMatrix: mat4x4<f32>,  // 64 bytes
    sphereCenterRadius: vec4<f32>,  // 16 bytes
    cascadeDepth: vec4<f32>,        // 16 bytes
    lightBiasNormalBias: vec4<f32>, // 16 bytes
    padding: array<vec4<f32>, 5>    // 80 bytes (5 * 16)
}

@group(1) @binding(0)
var<uniform> DirectionalLight: DirectionalLightInfo;

@group(1) @binding(1)
var<storage> DirectionalLightCascade: array<DirectionalLightCascadeInfo>;

